// Generated by CoffeeScript 1.10.0
(function() {
  (function(factory) {
    if (typeof define === 'function' && define.amd) {
      define(['jquery'], factory);
    } else if (typeof module === 'object' && module.exports) {
      module.exports = function(root, jQuery) {
        if (jQuery === void 0) {
          if (typeof window !== 'undefined') {
            jQuery = require('jquery');
          } else {
            jQuery = require('jquery')(root);
          }
        }
        factory(jQuery);
        return jQuery;
      };
    } else {
      factory(jQuery);
    }
  })(function($) {
    var getScaledElementMargin, scaleElementToFitWrapper, setElementScale;
    scaleElementToFitWrapper = function(element, options) {
      var elementHeight, elementWidth, parent, position, ratio, ratioHeight, ratioWidth;
      if (options == null) {
        options = {};
      }
      parent = options.parent || element.parent();
      if (typeof parent === 'string') {
        parent = element.closest(parent);
      }
      setElementScale(element);
      position = element.css('position');
      element.css({
        position: 'absolute'
      });
      elementWidth = element.width();
      if (options.withLeftPosition) {
        elementWidth += Math.max(element.position().left, 0);
      }
      ratioWidth = parent.width() / elementWidth;
      elementHeight = element.height();
      ratioHeight = parent.height() / elementHeight;
      element.css({
        position: position
      });
      ratio = Math.min(ratioWidth, 1);
      if (options.scaleToHeight) {
        ratio = Math.min(ratio, ratioHeight);
      }
      if (ratio < 1) {
        setElementScale(element, elementWidth, elementHeight, ratio);
      }
      return ratio;
    };
    getScaledElementMargin = function(size, ratio) {
      return (size * -1 * (1 - ratio)) + "px";
    };
    setElementScale = function(element, width, height, ratio) {
      var marginLeft, marginTop, transform;
      if (typeof width === 'number' && typeof height === 'number' && typeof ratio === 'number') {
        transform = "scale(" + ratio + ")";
        marginLeft = getScaledElementMargin(width, ratio);
        marginTop = getScaledElementMargin(height, ratio);
      } else {
        transform = 'none';
        marginLeft = 0;
        marginTop = 0;
      }
      return element.css({
        "margin-left": marginLeft,
        "margin-top": marginTop,
        "-webkit-transform": transform,
        "-moz-transform": transform,
        "-o-transform": transform,
        "-ms-transform": transform,
        "transform": transform,
        "-webkit-transform-origin": '100% 100%',
        "-moz-transform-origin": '100% 100%',
        "-o-transform-origin": '100% 100%',
        "-ms-transform-origin": '100% 100%',
        "transform-origin": '100% 100%'
      });
    };
    $.fn.scaleToFit = function(options) {
      if (options == null) {
        options = {};
      }
      return this.each(function() {
        return scaleElementToFitWrapper($(this), options);
      });
    };
  });

}).call(this);
